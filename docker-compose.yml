version: "3.8"

services:
  backend:
    build:
      context: ./backend
    container_name: backend
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
    ports:
      - "5000:5000"
    restart: always
    networks:
      - backend-network

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: always
    networks:
      - backend-network

  db:
    image: postgres:15
    container_name: postgres-db
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "gamedb"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s

networks:
  backend-network:
    driver: bridge

volumes:
  pgdata:
