services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quantquest-backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.prod
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: gamedb
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      FLASK_ENV: production
      FLASK_APP: app
      FLASK_DEBUG: 0
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 5s
    networks:
      - quantquest-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    container_name: quantquest-frontend
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - quantquest-network

  db:
    image: postgres:15
    container_name: quantquest-postgres
    environment:
      POSTGRES_DB: gamedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ${PGDATA_PATH}:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "gamedb" ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s
    networks:
      - quantquest-network

  redis:
    image: redis:alpine
    container_name: quantquest-redis
    ports:
      - "6380:6379"
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s
    networks:
      - quantquest-network

networks:
  quantquest-network:
    driver: bridge
